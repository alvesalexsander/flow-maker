const contratarPacote = require('./map');
const {
    startContratarPacote,
    saudacaoURA,
    transfereParaATH,
    encerraLigacao,
    viaDeAcesso,
    segundaContratacao,
    informaQueJaContratou,
    perguntaQuerAlgoMais,
    desambiguador,
    agradeceDesliga,
    verificaBloqueioFinanceiro,
    respostaBloqueioFinanceiroSim,
    respostaBloqueioFinanceiroNao,
    verificaNavegaçãoReduzida,
    respostaNavegaçãoReduzidaNao,
    intencaoProblemaNaInternet,
    respostaoProblemaNaInternetSim,
    verificaReiniciouAparelho,
    respostaReiniciouAparelhoNao,
    verificaQuerReiniciar,
    respostaQuerReiniciarNao,
    verificaBillingProfile,
    verificaClienteInadimplente,
    respostaClienteInadimplenteSim,
    verificaClienteTitular,
    respostaClienteTitularNao,
    respostaClienteTitularProbInternetSim,
    verificaPacoteVazio,
    respostaVerificaPacoteVazioSim,
    respostaVerificaPacoteVazioNao,
    verificaPacoteEscolhido,
    respostaPacoteEscolhidoNao,
    verificaRepetir,
    respostaRepetir,
    verificaConfirmaContratacao,
    respostaConfirmaContratacaoNao,
    verificaLigandoProprioAparelho,
    respostaLigandoProprioAparelhoNao,
    verificaFluxoDeSenha,
    respostaFluxoDeSenhaFalha,
    verificaContratacaoEfetuada,
    respostaContratacaoEfetuadaSucesso,
    respostaContratacaoEfetuadaFalha } = require('./nodes');

contratarPacote.linkChain(
    [perguntaQuerAlgoMais.getPath('Quer algo mais'), desambiguador],
    [perguntaQuerAlgoMais.getPath('Não quer mais nada'), agradeceDesliga],

    [startContratarPacote, saudacaoURA],
    [saudacaoURA, viaDeAcesso],
    [viaDeAcesso, segundaContratacao],
        [segundaContratacao.getPath('Segunda contratação'), informaQueJaContratou],
            [informaQueJaContratou, perguntaQuerAlgoMais],
        [segundaContratacao.getPath('Não é a segunda contratação'), verificaBloqueioFinanceiro],
            [verificaBloqueioFinanceiro.getPath('Está em BTO'), respostaBloqueioFinanceiroSim],
                [respostaBloqueioFinanceiroSim, perguntaQuerAlgoMais],
            [verificaBloqueioFinanceiro.getPath('Não é BTO'), respostaBloqueioFinanceiroNao],
                [respostaBloqueioFinanceiroNao, verificaNavegaçãoReduzida],
                    [verificaNavegaçãoReduzida.getPath('Navegação normal'), respostaNavegaçãoReduzidaNao],
                        [respostaNavegaçãoReduzidaNao, intencaoProblemaNaInternet],
                            [intencaoProblemaNaInternet.getPath('Internet sem problemas'), perguntaQuerAlgoMais],
                            [intencaoProblemaNaInternet.getPath('Está com problema na internet'), respostaoProblemaNaInternetSim],
                                [respostaoProblemaNaInternetSim, verificaReiniciouAparelho],
                                    [verificaReiniciouAparelho.getPath('Ainda não reiniciou'), respostaReiniciouAparelhoNao],
                                        [respostaReiniciouAparelhoNao, verificaQuerReiniciar],
                                            [verificaQuerReiniciar.getPath('Aceita reiniciar'), encerraLigacao],
                                            [verificaQuerReiniciar.getPath('Não quer reiniciar'), respostaQuerReiniciarNao],
                                                [respostaQuerReiniciarNao, perguntaQuerAlgoMais],
                                    [verificaReiniciouAparelho.getPath('Já reiniciou'), respostaQuerReiniciarNao],
                    [verificaNavegaçãoReduzida.getPath('Navegação reduzida'), verificaBillingProfile],
                        [verificaBillingProfile.getPath('Sucesso no billing'), verificaClienteInadimplente],
                            [verificaClienteInadimplente.getPath('Cliente inadimplente'), respostaClienteInadimplenteSim],
                                [respostaClienteInadimplenteSim, perguntaQuerAlgoMais],
                            [verificaClienteInadimplente.getPath('Cliente sem débitos'), verificaClienteTitular],
                                [verificaClienteTitular.getPath('Não é titular'), respostaClienteTitularNao],
                                    [respostaClienteTitularNao, perguntaQuerAlgoMais],
                                [verificaClienteTitular.getPath('É titular'), intencaoProblemaNaInternet],
                                    [intencaoProblemaNaInternet.getPath('Está com problema na internet'), respostaClienteTitularProbInternetSim],
                                        [respostaClienteTitularProbInternetSim, verificaPacoteVazio],
                                            [verificaPacoteVazio.getPath('Pacote vazio'), respostaVerificaPacoteVazioSim],
                                                [respostaVerificaPacoteVazioSim, perguntaQuerAlgoMais],
                                            [verificaPacoteVazio.getPath('Pacotes disponíveis'), respostaVerificaPacoteVazioNao],
                                                [respostaVerificaPacoteVazioNao, verificaPacoteEscolhido],
                                                    [verificaPacoteEscolhido.getPath('Nenhum pacote escolhido'), respostaPacoteEscolhidoNao],
                                                        [respostaPacoteEscolhidoNao, verificaRepetir],
                                                            [verificaRepetir.getPath('Quer ouvir opções de novo'), respostaRepetir],
                                                                [respostaRepetir.getPath('Pacote escolhido(após repetir)'), verificaConfirmaContratacao],
                                                                [respostaRepetir.getPath('Nenhum pacote escolhido(após repetir)'), perguntaQuerAlgoMais],
                                                    [verificaPacoteEscolhido.getPath('Pacote escolhido'), verificaConfirmaContratacao],
                                                        [verificaConfirmaContratacao.getPath('Não confirma contratação'), respostaConfirmaContratacaoNao],
                                                            [respostaConfirmaContratacaoNao, verificaRepetir.getPath('Não quer ouvir de novo')],
                                                                [verificaRepetir.getPath('Não quer ouvir de novo'), respostaRepetir.getPath('Nenhum pacote escolhido(após repetir)')],
                                                        [verificaConfirmaContratacao.getPath('Confirma contratação'), verificaLigandoProprioAparelho],
                                                            [verificaLigandoProprioAparelho.getPath('Ligando de outro aparelho'), respostaLigandoProprioAparelhoNao],
                                                                [respostaLigandoProprioAparelhoNao, verificaFluxoDeSenha],
                                                                    [verificaFluxoDeSenha.getPath('Falha no fluxo de senha'), respostaFluxoDeSenhaFalha],
                                                                        [respostaFluxoDeSenhaFalha, perguntaQuerAlgoMais],
                                                                    [verificaFluxoDeSenha.getPath('Sucesso no fluxo de senha'), verificaContratacaoEfetuada],
                                                            [verificaLigandoProprioAparelho.getPath('Ligando do próprio aparelho'), verificaContratacaoEfetuada],
                                                                [verificaContratacaoEfetuada.getPath('Sucesso na contratação'), respostaContratacaoEfetuadaSucesso],
                                                                    [respostaContratacaoEfetuadaSucesso, perguntaQuerAlgoMais],
                                                                [verificaContratacaoEfetuada.getPath('Falha na contratação'), respostaContratacaoEfetuadaFalha],
                                                                    [respostaContratacaoEfetuadaFalha, perguntaQuerAlgoMais],
                                    [intencaoProblemaNaInternet.getPath('Internet sem problemas'), verificaPacoteVazio],
                        [verificaBillingProfile.getPath('Erro no billing'), verificaClienteInadimplente],
)


contratarPacote.mapScenarios();
contratarPacote.showScenarios();
contratarPacote.exportScenariosToExcel();